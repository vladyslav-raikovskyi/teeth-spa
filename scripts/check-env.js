#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞...\n');

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
const envFiles = [
  'src/environments/environment.ts',
  'src/environments/environment.development.ts',
  'src/environments/environment.prod.ts'
];

envFiles.forEach(file => {
  const filePath = path.join(process.cwd(), file);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file} - —ñ—Å–Ω—É—î`);
    try {
      const content = fs.readFileSync(filePath, 'utf8');
      if (content.includes('apiUrl')) {
        console.log(`   üì° apiUrl –∑–Ω–∞–π–¥–µ–Ω–æ`);
      } else {
        console.log(`   ‚ö†Ô∏è  apiUrl –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
      }
      if (content.includes('apiPassword')) {
        console.log(`   üîê apiPassword –∑–Ω–∞–π–¥–µ–Ω–æ`);
      } else {
        console.log(`   ‚ö†Ô∏è  apiPassword –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
      }
    } catch (error) {
      console.log(`   ‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É: ${error.message}`);
    }
  } else {
    console.log(`‚ùå ${file} - –Ω–µ —ñ—Å–Ω—É—î`);
  }
});

console.log('\nüìã –ü–æ—Ç–æ—á–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:');
console.log('- –†–æ–∑—Ä–æ–±–∫–∞: http://localhost:8000');
console.log('- –ü—Ä–æ–¥–∞–∫—à–Ω: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ API_URL —Ç–∞ API_PASSWORD');

console.log('\nüîß –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è Railway:');
console.log('- API_URL: URL –≤–∞—à–æ–≥–æ API —Å–µ—Ä–≤–µ—Ä–∞');
console.log('- API_PASSWORD: –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó API (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)');
console.log('- NODE_ENV: production');
console.log('- PORT: 8080');

console.log('\nüí° –î–ª—è –∑–º—ñ–Ω–∏ URL API –∞–±–æ –ø–∞—Ä–æ–ª—è –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤ Railway Dashboard'); 